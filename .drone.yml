kind: pipeline
name: lingzhi-web-pipeline
type: docker

steps:
  # 开始通知
  - name: notify-start
    image: plugins/webhook
    settings:
      urls:
        from_secret: feishu_xiaolaba_notify_url
      content_type: application/json
      template: |
        {
        "title": "${DRONE_BUILD_NUMBER}.部署开始！ {{ repo.name }}:{{ build.branch }}",
        "text": "提交人: ${DRONE_COMMIT_AUTHOR} \n备注: ${DRONE_COMMIT_MESSAGE//"/} \n行为: {{ build.event }} \n提交SHA: ${DRONE_COMMIT_SHA:0:8} \nURL: {{ build.link }}"
        }
    when:
      status:
        - failure
        - success
  # 获取缓存
  - name: restore-cache
    image: drillster/drone-volume-cache
    volumes:
      - name: cache
        path: /cache
    settings:
      restore: true
      mount:
        - ./.npm-cache
        - ./node_modules
  # 安装依赖
  - name: npm-install
    image: node:12
    commands:
      - npm config get registry
      - npm config set registry https://registry.npm.taobao.org
      - npm config set cache ./.npm-cache --global
      - npm install
  # 构建dist
  - name: build-dist
    image: node:12
    commands:
      - npm run build

  # 保存缓存
  - name: rebuild-cache # 把依赖和 npm 缓存放到缓存里
    image: drillster/drone-volume-cache
    settings:
      rebuild: true
      mount:
        - ./.npm-cache
        - ./node_modules
    volumes:
      - name: cache
        path: /cache

  # 构建prod镜像
  - name: build-prod
    image: plugins/docker
    settings:
      username:
        from_secret: aliyun_dockerhub_username
      password:
        from_secret: aliyun_dockerhub_password
      repo: registry-vpc.cn-beijing.aliyuncs.com/secnium/lingzhi-web
      registry:
        from_secret: aliyun_dockerhub_registry
      mirror:
        from_secret: aliyun_mirror
      use_cache: true
      cache_from:
        - registry-vpc.cn-beijing.aliyuncs.com/secnium/lingzhi-web:latest
      tags:
        - latest
        - 0.1.${DRONE_BUILD_NUMBER}
    when:
      branch:
        - master

    # 构建saas-prod镜像
  - name: build-iast-saas-web-prod
    image: plugins/docker
    settings:
      username:
        from_secret: aliyun_dockerhub_username
      password:
        from_secret: aliyun_dockerhub_password
      repo: registry-vpc.cn-beijing.aliyuncs.com/secnium/iast-saas-web
      registry:
        from_secret: aliyun_dockerhub_registry
      mirror:
        from_secret: aliyun_mirror
      use_cache: true
      cache_from:
        - registry-vpc.cn-beijing.aliyuncs.com/secnium/iast-saas-web:latest
      tags:
        - latest
        - 0.1.${DRONE_BUILD_NUMBER}
    when:
      branch:
        - saas.master

  # 部署prod环境
  - name: deliver-prod
    image: sinlead/drone-kubectl
    settings:
      kubernetes_server:
        from_secret: huoqi_ask_prod_server
      kubernetes_cert:
        from_secret: huoqi_ask_prod_cert
      kubernetes_token:
        from_secret: huoqi_ask_prod_token
    commands:
      - find deploy/deploy-ask-lingzhi-web-prod.yml -type f -exec sed -i 's/VERSION/0.1.${DRONE_BUILD_NUMBER}/g' {} \;
      - ls deploy/deploy-ask-lingzhi-web-prod.yml | xargs -I {} kubectl apply -f {}
    when:
      branch:
        - master

  # 部署saas.prod环境
  - name: deliver-iast-saas-web-prod
    image: sinlead/drone-kubectl
    settings:
      kubernetes_server:
        from_secret: iast_eks_prod_server
      kubernetes_cert:
        from_secret: iast_eks_prod_cert
      kubernetes_token:
        from_secret: iast_eks_prod_token
    commands:
      - find deploy/deploy-eks-iast-saas-prod.yml -type f -exec sed -i 's/VERSION/0.1.${DRONE_BUILD_NUMBER}/g' {} \;
      - ls deploy/deploy-eks-iast-saas-prod.yml | xargs -I {} kubectl apply -f {}
    when:
      branch:
        - saas.master

  # 结束通知
  - name: notify-end
    image: plugins/webhook
    settings:
      urls:
        from_secret: feishu_xiaolaba_notify_url
      content_type: application/json
      template: |
        {
        "title": "${DRONE_BUILD_NUMBER}.部署完成！ {{ repo.name }}:{{ build.branch }}",
        "text": "构建状态: {{build.status}} \n提交人: ${DRONE_COMMIT_AUTHOR} \n备注: ${DRONE_COMMIT_MESSAGE//"/} \n行为: {{ build.event }} \n提交SHA: ${DRONE_COMMIT_SHA:0:8} \nURL: {{ build.link }}"
        }
    when:
      status:
        - failure
        - success

volumes:
  - name: cache
    host:
      path: /data/cache

trigger:
  branch:
    - master
    - saas.master
  event:
    - push
    - tag
